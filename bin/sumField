#!/bin/bash
shopt -qs extglob

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: cat FILE [...] | %q %s\n' "$(basename "$1")" '[--has-header] [-F|--field-separator FS] [-]N|HEADER-NAME'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-i|--input FILESPEC [-i ...] ... [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Add up numbers in field N (-N counted from behind) / field with HEADER-NAME
(implies --has-header), and print the sum.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --has-header	First line is a header; use to look up HEADER-NAME, skip
			it for calculation.
EXIT STATUS:
    99	If no numbers were encountered.
HELPTEXT
}

typeset -a fsArgs
typeset -a awkArgs=()
hasHeader=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--has-header)	shift; hasHeader=t;;
	--input|-i)		shift; awkArgs+=("$1"); shift;;
	--field-separator|-F)	shift; fsArgs=(-F "$1"); shift;;
	--)		shift; break;;
	-+([0-9]))	break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    printUsage >&2 "$0"
    exit 2
fi


awk \
    "${fsArgs[@]}" \
    -v "hasHeader=$hasHeader" \
    -v "aggregateFieldSpecifier=${1:?}" \
'
function getFieldNr()
{
    return (aggregateFieldNr ~ /^-/ ? NF + aggregateFieldNr + 1 : aggregateFieldNr)
}
function count(      fieldNr)
{
    fieldNr = getFieldNr()
    if (fieldNr > NF) return
    sum += $fieldNr
}
NR == 1 {
    if (aggregateFieldSpecifier ~ /^-?[0-9]+/) {
	aggregateFieldNr = aggregateFieldSpecifier
	if (getFieldNr() <= 0 || getFieldNr() > NF) {
	    printf "ERROR: No field number %d in\n%s\n", aggregateFieldNr, $0 > "/dev/stderr"
	    exit 3
	}

	if (! hasHeader) {
	    # No header with N; need to aggregate first line, too.
	    count()
	}
    } else {
	for (aggregateFieldNr = 1; aggregateFieldNr <= NF; aggregateFieldNr++) {
	    if ($aggregateFieldNr == aggregateFieldSpecifier) next
	}

	printf "ERROR: Could not locate field named %s in\n%s\n", aggregateFieldSpecifier, $0 > "/dev/stderr"
	exit 3
    }
}

NR > 1 {
    count()
}

END {
    if (sum == "") {
	exit 99
    } else {
	print sum
    }
}
' "${awkArgs[@]}"
