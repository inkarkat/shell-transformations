#!/usr/bin/perl
# http://blog.plover.com/prog/accumulate.html

sub usage() {
    print <<'EOF'
Usage: accumulate [-k field] [-v field]
Reads an input of this form:
        k1 v1
        k1 v2
        k2 v3
        k1 v4
        k2 v5
        k3 v6
and writes it out in this format:
        k1 v1 v2 v4
        k2 v3 v5
        k3 v6
Example: Get rid of duplicates:
        md5sum * | accumulate | perl -lane 'unlink @F[2..$#F]'
EOF
    ;
    exit 1;
}

use Getopt::Std;
my %opt = (k => 1, v => 2);
usage() if $ARGV[0] eq '--help';
getopts('k:v:', \%opt) or usage();
for (qw(k v)) {
    $opt{$_} -= 1 if $opt{$_} > 0;
}

while (<>) {
    chomp;
    my @F = split;
    push @{$K{$F[$opt{k}]}}, $F[$opt{v}];
}

for my $k (keys %K) {
    print "$k @{$K{$k}}\n";
}
